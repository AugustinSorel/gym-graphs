import type { RouterOutputs } from "@/trpc/react";
import { prepareUserRandomFactsData } from "./math";

export const mockExercises: RouterOutputs["exercise"]["all"] = [
  {
    name: "bench press",
    muscleGroups: ["chest"],
    userId: "",
    id: "",
    createdAt: new Date(),
    updatedAt: new Date(),
    position: { exerciseId: "", gridPosition: 0, id: "", userId: "" },
    data: [
      {
        doneAt: "01/01/01",
        numberOfRepetitions: 10,
        weightLifted: 10,
        exerciseId: "",
        id: "",
        updatedAt: new Date(),
        createdAt: new Date(),
      },
      {
        doneAt: "01/02/01",
        numberOfRepetitions: 20,
        weightLifted: 10,
        exerciseId: "",
        id: "",
        updatedAt: new Date(),
        createdAt: new Date(),
      },
      {
        doneAt: "01/10/01",
        numberOfRepetitions: 30,
        weightLifted: 40,
        exerciseId: "",
        id: "",
        updatedAt: new Date(),
        createdAt: new Date(),
      },
      {
        doneAt: "01/15/01",
        numberOfRepetitions: 20,
        weightLifted: 45,
        exerciseId: "",
        id: "",
        updatedAt: new Date(),
        createdAt: new Date(),
      },
    ],
  },
  {
    name: "squat",
    muscleGroups: ["legs"],
    userId: "",
    id: "",
    position: { exerciseId: "", gridPosition: 1, id: "", userId: "" },
    createdAt: new Date(),
    updatedAt: new Date(),
    data: [
      {
        doneAt: "01/02/01",
        numberOfRepetitions: 15,
        weightLifted: 20,
        exerciseId: "",
        id: "",
        updatedAt: new Date(),
        createdAt: new Date(),
      },
      {
        doneAt: "01/09/01",
        numberOfRepetitions: 25,
        weightLifted: 20,
        exerciseId: "",
        id: "",
        updatedAt: new Date(),
        createdAt: new Date(),
      },
      {
        doneAt: "01/20/01",
        numberOfRepetitions: 25,
        weightLifted: 30,
        exerciseId: "",
        id: "",
        updatedAt: new Date(),
        createdAt: new Date(),
      },
    ],
  },
  {
    name: "shoulder press",
    muscleGroups: ["shoulders"],
    userId: "",
    id: "",
    position: { exerciseId: "", gridPosition: 2, id: "", userId: "" },
    createdAt: new Date(),
    updatedAt: new Date(),
    data: [
      {
        doneAt: "01/20/01",
        numberOfRepetitions: 12,
        weightLifted: 18,
        exerciseId: "",
        id: "",
        updatedAt: new Date(),
        createdAt: new Date(),
      },
      {
        doneAt: "01/21/01",
        numberOfRepetitions: 22,
        weightLifted: 30,
        exerciseId: "",
        id: "",
        updatedAt: new Date(),
        createdAt: new Date(),
      },
      {
        doneAt: "01/25/01",
        numberOfRepetitions: 12,
        weightLifted: 18,
        exerciseId: "",
        id: "",
        updatedAt: new Date(),
        createdAt: new Date(),
      },
    ],
  },
  {
    name: "biceps curl",
    muscleGroups: ["biceps"],
    userId: "",
    id: "",
    position: { exerciseId: "", gridPosition: 3, id: "", userId: "" },
    createdAt: new Date(),
    updatedAt: new Date(),
    data: [
      {
        doneAt: "01/10/01",
        numberOfRepetitions: 8,
        weightLifted: 22,
        exerciseId: "",
        id: "",
        updatedAt: new Date(),
        createdAt: new Date(),
      },
      {
        doneAt: "01/11/01",
        numberOfRepetitions: 8,
        weightLifted: 30,
        exerciseId: "",
        id: "",
        updatedAt: new Date(),
        createdAt: new Date(),
      },
    ],
  },
];

export const mockTeam: RouterOutputs["team"]["get"] = {
  authorId: "",
  id: "",
  name: "my team",
  usersToTeams: [
    {
      team: {
        authorId: "",
        id: "",
        name: "my team",
        teamInvite: {
          accepted: true,
          email: "john@mail.com",
          id: "",
          token: "",
          teamId: "",
          createdAt: new Date(),
          expiresAt: new Date(),
        },
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      user: {
        id: "",
        emailVerified: new Date(),
        image: null,
        exercises: mockExercises,
        stats: {
          id: "",
          userId: "",
          ...prepareUserRandomFactsData(mockExercises),
        },
        name: "john",
        email: "john@mail.com",
      },
      teamId: "",
      memberId: "0",
      updatedAt: new Date(),
      createdAt: new Date(),
    },
    {
      team: {
        authorId: "",
        id: "",
        name: "my team",
        teamInvite: {
          accepted: true,
          email: "mike@mail.com",
          id: "",
          token: "",
          teamId: "",
          createdAt: new Date(),
          expiresAt: new Date(),
        },
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      user: {
        id: "",
        emailVerified: new Date(),
        image: null,
        exercises: mockExercises.slice(0, 2),
        stats: {
          id: "",
          userId: "",
          ...prepareUserRandomFactsData(mockExercises.slice(0, 2)),
        },
        name: "mike",
        email: "mike@mail.com",
      },
      teamId: "",
      memberId: "1",
      updatedAt: new Date(),
      createdAt: new Date(),
    },
  ],
  createdAt: new Date(),
  updatedAt: new Date(),
};
